{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","userId","className","href","usersFromServer","find","user","TodoInfo","todo","cn","completed","title","TodoList","todos","map","todosModified","findIndex","App","useState","setTodos","titleError","setTitleError","userError","setUserError","setTodo","handleSubmit","event","preventDefault","trim","prevTodos","prevTodo","action","method","onSubmit","e","htmlFor","type","placeholder","onChange","target","value","style","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eaf10a1.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../../api/users';\n\ninterface Props {\n  userId: number\n}\n\nexport const UserInfo:React.FC<Props> = ({ userId }) => {\n  return (\n    <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n      {usersFromServer.find(user => user.id === userId)?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodosFromServer } from '../../types/TodosFromServer';\n\ninterface Props {\n  todo: TodosFromServer\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id=\"1\"\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo userId={todo.userId} />\n    </article>\n  );\n};\n","// import { TodosFromServer } from '../../types/TodosWithUsers';\nimport { TodosFromServer } from '../../types/TodosFromServer';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodosFromServer[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst todosModified = todosFromServer.map(todo => ({\n  ...todo,\n  userId: usersFromServer.findIndex(user => user.id === todo.userId) + 1,\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosModified);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const [todo, setTodo] = useState({\n    id: 16,\n    title: '',\n    completed: false,\n    userId: 0,\n  });\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodo(prevTodo => ({\n      ...prevTodo,\n      title: event.target.value,\n    }));\n\n    setTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodo(prevTodo => ({\n      ...prevTodo,\n      userId: +event.target.value,\n    }));\n\n    setUserError(false);\n  };\n\n  const checkForError = () => {\n    if (!todo.title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!todo.userId) {\n      setUserError(true);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    checkForError();\n\n    if (titleError || userError || !todo.title.trim() || !todo.userId) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, todo]);\n\n    setTodo((prevTodo) => ({\n      id: prevTodo.id + 1,\n      title: '',\n      completed: false,\n      userId: 0,\n    }));\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            onChange={handleTitle}\n            value={todo.title}\n          />\n          <span\n            className=\"error\"\n            style={{ display: titleError ? 'inline-block' : 'none' }}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            name=\"user\"\n            onChange={handleUser}\n            value={todo.userId}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          <span\n            className=\"error\"\n            style={{ display: userError ? 'inline-block' : 'none' }}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}